--1.?????????? ??? ???????? (15%) ??? ?????? ?? ????????? ? ????????? ?? ????? Alicia Zelaya

DECLARE
eisfores NUMBER(6,2);
BEGIN 
    DBMS_OUTPUT.ENABLE(50);
    SELECT salary*0.15
    INTO eisfores
    FROM employee
    WHERE fname='Alicia' AND lname='Zelaya';
    DBMS_OUTPUT.PUT_LINE('Eisfores Alicia:' || to_char(eisfores));
END;
/

--2 ???????????? ??? ?????????? ? ????? ????????????? ??? ????????? ????????? ???????? 500 ??? ??? ????????? ?????????? 12345,
--  ??????? ?? ??????? ????????? ???????? ??? ?? ???, ???? ????? ??? ?????????? ?????? ??? ???????????. ?? ???????? ?????????,
--  ????????? ?? ?????? ?? ??? ??? ??????? ???? ?????? ?????????

declare
account_balance number(10,2);
acct constant number(5):=12345;
debit_amount constant number(5,2):=500;
begin
    dbms_output.enable;
    select balance
    into account_balance
    from accounts
    where account_id=acct
    for update of balance;
    
    if account_balance >= debit_amount
        then update accounts set balance = balance - debit_amount where account_id = acct;
         dbms_output.put_line('Transaction completed');
    else
        insert into logs values (acct, account_balance, 'Insufficient funds for the trancsaction');
        dbms_output.put_line('Insufficient funds for the trancsaction');
    end if;
    commit;
end;
/

--3 ?????????? procedure ??? ??????? ??????? ?? ?? ????? ??? ?????? ?? ?????????.

CREATE OR REPLACE PROCEDURE welcome_msg(p_name IN varchar2) AS
BEGIN
    DBMS_OUTPUT.ENABLE;
    DBMS_OUTPUT.PUT_LINE('Welcome ' || p_name);
END;
/

exec welcome_msg('Mirianthis');

--4 ?????????? funtion ??? ?????????? ??? ??????? ?? ?? ????? ??? ?????? ?? ?????????

CREATE OR REPLACE FUNCTION welcome_msg_func(p_name IN varchar2) RETURN varchar2 IS
BEGIN    
    return('Welcome ' || p_name);
END;
/

select welcome_msg_func('Mirianthis') AS minima from DUAL;

--5 ?? ???? ?? ??????? 1 ?????????????? procedure ???? ??? pl/sql script ??? ??? ?? ??????????? ??? ????? ??? ????????? 999887777 ???? ?? ?? bonus 1000

DECLARE
salary_of_empl NUMBER(8,2);
emp_ssn NUMBER(10):=999887777;
bonus NUMBER(4):=1000;

PROCEDURE calc_salary_plus_bonus(empsalary IN OUT NUMBER, bonus IN NUMBER ) IS
    BEGIN
        empsalary := empsalary+bonus;
    END;   

BEGIN 
    SELECT salary
    INTO salary_of_empl
    FROM employee
    WHERE ssn = emp_ssn;
        
    DBMS_OUTPUT.PUT_LINE('Before exec procedure: ' || salary_of_empl);
    
    calc_salary_plus_bonus(salary_of_empl,bonus);
    
    DBMS_OUTPUT.PUT_LINE('After exec procedure: ' || salary_of_empl);
END;
/

--6 ??????????? ??? procedure ?? ????? ??????? ??? ?? ???????? ???? ????????? ?? ???? ?? ssn ???.

CREATE OR REPLACE PROCEDURE print_employee (empl_ssn IN NUMBER) IS
    emp_details employee%ROWTYPE;
BEGIN
    SELECT *
    INTO emp_details
    FROM employee
    WHERE ssn=empl_ssn;
    DBMS_OUTPUT.ENABLE;
    DBMS_OUTPUT.PUT_LINE(emp_details.fname || ' ' || emp_details.lname || ' ' || emp_details.address);

END;
/

EXEC print_employee(123456789);

--7 ??????? ??? ?????????? 2 ???? ?? ??????????????? triggers ??? ??? ???????? ???????? ???? ????????
--  ???? ?????? loggs ??? ???? ????????? ??? ??????? ? ??????? ??? ????????

CREATE OR REPLACE TRIGGER accounts_log_trg    
    AFTER UPDATE ON accounts
    FOR EACH ROW    
    BEGIN 
        INSERT INTO logs(account_id, balance, log_message) VALUES (:new.account_id, :new.balance, 'A new transaction was performed');
        DBMS_OUTPUT.ENABLE;
        DBMS_OUTPUT.PUTLINE('A new transaction was performed');
    END;
    /
    
declare
account_balance number(10,2);
acct constant number(5):=12345;
debit_amount constant number(5,2):=500;
begin
    dbms_output.enable;
    select balance
    into account_balance
    from accounts
    where account_id=acct
    for update of balance;
    
    if account_balance >= debit_amount
        then update accounts set balance = balance - debit_amount where account_id = acct;
        dbms_output.put_line('Transaction completed');
    else
        insert into logs values (acct, account_balance, 'Insufficient funds for the trancsaction');
        dbms_output.put_line('Insufficient funds for the trancsaction');
    end if;
    commit;
end;
/